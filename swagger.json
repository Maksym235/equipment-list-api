{
  "openapi": "3.0.3",
  "info": {
    "title": "BeReady",
    "description": "",
    "version": "1.0.1"
  },
  "servers": [
    {
      "url": "https://beready-api.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Start server",
      "description": "cold start"
    },
    {
      "name": "Auth",
      "description": "login/register/current/logout"
    },
    {
      "name": "Persons",
      "description": "Persons route"
    },
    {
      "name": "Equip",
      "description": "Equips route"
    },
    {
      "name": "Tours",
      "description": "Tours route"
    }
  ],
  "paths": {
    "/start": {
      "get": {
        "tags": [
          "Start server"
        ],
        "summary": "fist request",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": ""
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "register",
        "description": "",
        "operationId": "register",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "login",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "get current user",
        "operationId": "findPetsByStatus",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Current"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "logout",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Logout"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/persons": {
      "get": {
        "tags": [
          "Persons"
        ],
        "summary": "get all persons",
        "operationId": "getAllPersons",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllPersons"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/persons/app": {
      "post": {
        "tags": [
          "Persons"
        ],
        "summary": "add person",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPersonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/persons/delete/{id}": {
      "delete": {
        "tags": [
          "Persons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of persons",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64ece9f96dcb1798c8da1cf5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeletePerson"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/equip": {
      "get": {
        "tags": [
          "Equip"
        ],
        "summary": "get all equips",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllEquip"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/equip/add": {
      "post": {
        "tags": [
          "Equip"
        ],
        "summary": "add equip item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddEquipRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddEquipResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/tours": {
      "get": {
        "tags": [
          "Tours"
        ],
        "summary": "get all tours",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllTours"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "/tours/add": {
      "post": {
        "tags": [
          "Tours"
        ],
        "summary": "add tour",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTourRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTourResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "bob"
          },
          "email": {
            "type": "string",
            "example": "bob@mail.com"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "registered successfully"
          },
          "resp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RegistersResp"
            }
          }
        }
      },
      "RegistersResp": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "bob"
          },
          "email": {
            "type": "string",
            "example": "bob@mail.com"
          },
          "token": {
            "type": "string",
            "example": ""
          },
          "_id": {
            "type": "string",
            "example": "64ece14f1c90c9b2e5b04a6a"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "bob@mail.com"
          },
          "password": {
            "type": "string",
            "example": "123456789"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Login successful"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0ZWNlMTRmMWM5MGM5YjJlNWIwNGE2YSIsImlhdCI6MTY5MzI0NjI0MiwiZXhwIjoxNjkzMzMyNjQyfQ.gIRmg4xU3nd5tmgN07E3sal_fwgkKCj4CNaUKy5ozzU"
          }
        }
      },
      "Current": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "bob@mail.com"
          }
        }
      },
      "Logout": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Logout successfully"
          }
        }
      },
      "GetAllPersons": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "resp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Persons"
            }
          }
        }
      },
      "Persons": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64ece14f1c90c9b2e5b04a6a"
          },
          "name": {
            "type": "string",
            "example": "Tom"
          },
          "color": {
            "type": "string",
            "example": "#5eff6e"
          }
        }
      },
      "AddPersonRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Tom"
          },
          "color": {
            "type": "string",
            "example": "#ff0d0d"
          }
        }
      },
      "AddPersonResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Persons created successfully"
          },
          "resp": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Tom"
              },
              "color": {
                "type": "string",
                "example": "#ff0d0d"
              },
              "_id": {
                "type": "string",
                "example": "64ece9f96dcb1798c8da1cf5"
              }
            }
          }
        }
      },
      "DeletePerson": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Successfully deleted"
          }
        }
      },
      "GetAllEquip": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "resp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EquipItem"
            }
          }
        }
      },
      "EquipItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a5de0ad6af75ef90616865"
          },
          "name": {
            "type": "string",
            "example": "Тапки"
          },
          "description": {
            "type": "string",
            "example": " "
          },
          "category": {
            "type": "string",
            "example": "Одяг"
          },
          "persons": {
            "type": "array",
            "example": [],
            "items": {
              "type": "string",
              "example": "64a5de0ad6af75ef90616865"
            }
          }
        }
      },
      "AddEquipRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Тапки"
          },
          "description": {
            "type": "string",
            "example": " "
          },
          "category": {
            "type": "string",
            "example": "Одяг"
          }
        }
      },
      "AddEquipResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "succesfully created"
          },
          "resp": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "64a5de0ad6af75ef90616865"
              },
              "name": {
                "type": "string",
                "example": "Тапки"
              },
              "description": {
                "type": "string",
                "example": " "
              },
              "category": {
                "type": "string",
                "example": "Одяг"
              },
              "persons": {
                "type": "array",
                "example": [],
                "items": {
                  "type": "string",
                  "example": "64a5de0ad6af75ef90616865"
                }
              }
            }
          }
        }
      },
      "GetAllTours": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 200
          },
          "resp": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tour"
            }
          }
        }
      },
      "Tour": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a5de0ad6af75ef90616865"
          },
          "name": {
            "type": "string",
            "example": "Goverla"
          },
          "users": {
            "type": "array",
            "example": [],
            "items": {
              "type": "string",
              "example": "64a5de0ad6af75ef90616865"
            }
          },
          "owner": {
            "type": "string",
            "example": "64a5de0ad6af75ef90616865"
          }
        }
      },
      "AddTourRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Black mountain"
          }
        }
      },
      "AddTourResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "succesfully created"
          },
          "tour": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "64a5de0ad6af75ef90616865"
              },
              "name": {
                "type": "string",
                "example": "Black mountain"
              },
              "users": {
                "type": "array",
                "example": [],
                "items": {
                  "type": "string",
                  "example": "64a5de0ad6af75ef90616865"
                }
              },
              "owner": {
                "type": "string",
                "example": "64a5de0ad6af75ef90616865"
              }
            }
          }
        }
      }
    }
  }
}